rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isPremiumUser() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPremium == true &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.premiumExpiry > request.time;
    }

    // Admin collection
    match /admins/{adminId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // User profiles
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();

      // Nested assessments collection
      match /assessments/{assessmentId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow update: if isOwner(userId) || isAdmin();
        allow delete: if isAdmin();
      }
    }

    // Subscriptions
    match /subscriptions/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }

    // Premium content
    match /premium-content/{docId} {
      allow read: if isPremiumUser() || isAdmin();
      allow write: if isAdmin();
    }

    // User achievements
    match /achievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Health goals
    match /health-goals/{goalId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Analytics
    match /analytics/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Leads collection
    match /leads/{leadId} {
      allow create: if true;
      allow read: if isAdmin() || 
        (request.auth != null && resource.data.email == request.auth.token.email);
      allow update: if isAdmin() || 
        (request.auth != null && resource.data.email == request.auth.token.email);
      allow delete: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
